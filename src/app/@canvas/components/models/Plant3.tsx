/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useLoader } from "@react-three/fiber";
import { imageKitLoader } from "@/app/utils/loader";

type GLTFResult = GLTF & {
  nodes: {
    PlantDracaenaMassCane001001: THREE.Mesh;
    PlantDracaenaMassCaneVase001001: THREE.Mesh;
  };
  materials: {};
};

export function Plant3(props: JSX.IntrinsicElements["group"]) {
  // const { nodes, materials } = useGLTF(
  //   "/models/PlantDracaena/PlantDracaena.glb"
  // ) as GLTFResult;
  const { nodes, materials } = useGLTF(
    "/models/PlantDracaena/plantdracaena-opt.glb"
  ) as GLTFResult;
  const [plantColorMap, plantNormalMap, plantRoughnessMap, plantMetalnessMap] =
    useLoader(THREE.TextureLoader, [
      "/models/PlantDracaena/PlantDracaenaMassCane001_COL_2K_METALNESS.jpg",
      "/models/PlantDracaena/PlantDracaenaMassCane001_NRM_2K_METALNESS.jpg",
      "/models/PlantDracaena/PlantDracaenaMassCane001_ROUGHNESS_2K_METALNESS.jpg",
      "/models/PlantDracaena/PlantDracaenaMassCane001_METALNESS_2K_METALNESS.jpg",
    ]).map((texture) => {
      texture.flipY = false;
      return texture;
    });

  const [vaseColorMap, vaseNormalMap, vaseRoughnessMap, vaseMetalnessMap] =
    useLoader(
      THREE.TextureLoader,
      [
        "/models/PlantDracaena/PlantDracaenaMassCaneVase001_COL_2K_METALNESS.jpg",
        "/models/PlantDracaena/PlantDracaenaMassCaneVase001_NRM_2K_METALNESS.png",
        "/models/PlantDracaena/PlantDracaenaMassCaneVase001_ROUGHNESS_2K_METALNESS.jpg",
        "/models/PlantDracaena/PlantDracaenaMassCaneVase001_METALNESS_2K_METALNESS.jpg",
      ].map((src) => imageKitLoader({ src, quality: "100" }))
    ).map((texture) => {
      texture.flipY = false;
      return texture;
    });
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.PlantDracaenaMassCane001001.geometry}
        position={[-0.87, -0.563, 1.1]}
        scale={0.79}
      >
        <meshStandardMaterial map={plantColorMap} />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.PlantDracaenaMassCaneVase001001.geometry}
        position={[-0.82, -0.596, 0.2]}
        scale={0.2}
      >
        <meshStandardMaterial map={vaseColorMap} />
      </mesh>
    </group>
  );
}

// useGLTF.preload("/plantdracaena-opt.glb");
