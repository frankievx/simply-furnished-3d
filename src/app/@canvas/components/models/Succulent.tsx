/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    ["G-cactus_gasteria_1_1"]: THREE.Mesh;
    ["G-cactus_gasteria_1_2"]: THREE.Mesh;
    ["G-cactus_gasteria_1_3"]: THREE.Mesh;
    ["G-cactus_gasteria_1_4"]: THREE.Mesh;
    ["G-cactus_gasteria_1_5"]: THREE.Mesh;
  };
  materials: {
    cactus_gasteria_vase_gasteria: THREE.MeshPhysicalMaterial;
    cactus_gasteria_cactus_gasteria: THREE.MeshStandardMaterial;
    cactus_gasteria_clay_pot: THREE.MeshStandardMaterial;
    cactus_gasteria_ground_pot5: THREE.MeshStandardMaterial;
    cactus_gasteria_stones: THREE.MeshStandardMaterial;
  };
};

export function Succulent(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/succulent-opt.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group position={[-0.002, 0, 0.075]} scale={0.076}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["G-cactus_gasteria_1_1"].geometry}
          material={materials.cactus_gasteria_vase_gasteria}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["G-cactus_gasteria_1_2"].geometry}
          material={materials.cactus_gasteria_cactus_gasteria}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["G-cactus_gasteria_1_3"].geometry}
          material={materials.cactus_gasteria_clay_pot}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["G-cactus_gasteria_1_4"].geometry}
          material={materials.cactus_gasteria_ground_pot5}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["G-cactus_gasteria_1_5"].geometry}
          material={materials.cactus_gasteria_stones}
        />
      </group>
    </group>
  );
}
