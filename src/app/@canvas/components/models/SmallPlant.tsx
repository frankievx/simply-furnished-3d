/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Plant_2002: THREE.Mesh;
    Plant_2003: THREE.Mesh;
    Pot_big: THREE.Mesh;
    Soil_big: THREE.Mesh;
  };
  materials: {
    Plant_green: THREE.MeshPhysicalMaterial;
    Hammered_Metal_Gold: THREE.MeshPhysicalMaterial;
    Soil: THREE.MeshStandardMaterial;
  };
};

export function SmallPlant(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/models/small-plant.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plant_2002.geometry}
        material={materials.Plant_green}
        position={[0.068, -0.055, 0.174]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plant_2003.geometry}
        material={materials.Plant_green}
        position={[0.029, 0.005, 0.179]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Pot_big.geometry}
        material={materials.Hammered_Metal_Gold}
        position={[0.006, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Soil_big.geometry}
        material={materials.Soil}
        position={[0.006, 0, 0.123]}
      />
    </group>
  );
}

useGLTF.preload("/models/small-plant.glb");
