/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useState } from "react";
import { useCursor, useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Plane005: THREE.Mesh;
    Wood_8001: THREE.Mesh;
    Wood_8005: THREE.Mesh;
  };
  materials: {
    Leg_1001: THREE.MeshStandardMaterial;
    Chair_1001: THREE.MeshStandardMaterial;
    ["Cushion _1001"]: THREE.MeshStandardMaterial;
  };
};

export function Chair(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/chair-model-webp.glb"
  ) as GLTFResult;
  const [hovered, set] = useState(false);
  useCursor(hovered, "pointer");
  return (
    <group
      {...props}
      dispose={null}
      onPointerOver={() => set(true)}
      onPointerOut={() => set(false)}
    >
      <group
        scale={0.00011}
        rotation={new THREE.Euler(1.57, 0, 0)}
        position={[0, 0.2, 0]}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane005.geometry}
          material={materials.Leg_1001}
          position={[18.025, 44.198, 5.499]}
          rotation={[-1.671, 1.393, 0]}
          scale={1.672}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Wood_8001.geometry}
          material={materials.Chair_1001}
          position={[0.614, 45.67, 27.002]}
          scale={0.01}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Wood_8005.geometry}
          material={materials["Cushion _1001"]}
          position={[0.459, 45.604, 26.636]}
          scale={0.01}
        />
      </group>
    </group>
  );
}

// useGLTF.preload("/models/chair-model-webp.glb");
