/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Leaves: THREE.Mesh;
    plastic_pot: THREE.Mesh;
    Pot003: THREE.Mesh;
    Soil003: THREE.Mesh;
  };
  materials: {
    Daun: THREE.MeshPhysicalMaterial;
    ["Plastic.001"]: THREE.MeshPhysicalMaterial;
    ["Glazed ceramic.001"]: THREE.MeshPhysicalMaterial;
    ["Procedural Dirt.001"]: THREE.MeshStandardMaterial;
  };
};

export function SmallMonstera(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/small-monstera-opt.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Leaves.geometry}
        material={materials.Daun}
        position={[-0.003, -0.02, 0.304]}
        rotation={[0.013, -0.051, 1.157]}
        scale={0.217}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.plastic_pot.geometry}
        material={materials["Plastic.001"]}
        position={[0, 0, 0.117]}
        scale={0.052}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Pot003.geometry}
        material={materials["Glazed ceramic.001"]}
        position={[0, 0, 0.07]}
        scale={0.07}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Soil003.geometry}
        material={materials["Procedural Dirt.001"]}
        position={[0.001, -0.001, 0.132]}
        scale={[0.051, 0.051, 0.115]}
      />
    </group>
  );
}

useGLTF.preload("/models/small-monstera-opt.glb");
