/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useLoader } from "@react-three/fiber";
import { imageKitLoader } from "@/app/utils/loader";

type GLTFResult = GLTF & {
  nodes: {
    Cube032: THREE.Mesh;
    Cube032_1: THREE.Mesh;
    Cube032_2: THREE.Mesh;
  };
  materials: {
    ["PORTA_TINTA.001"]: THREE.MeshStandardMaterial;
    ["Material.007"]: THREE.MeshStandardMaterial;
    quadro2_figura: THREE.MeshStandardMaterial;
  };
};

export function PaintingYellowRed(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/painting-yellowred.glb"
  ) as GLTFResult;

  const [colorMap, normalMap, roughnessMap, metalnessMap] = useTexture(
    [
      "/textures/VeneerWhiteOakRandomMatched001-4K/VeneerWhiteOakRandomMatched001_COL_4K_METALNESS.png",
      "/textures/VeneerWhiteOakRandomMatched001-4K/VeneerWhiteOakRandomMatched001_NRM_4K_METALNESS.png",
      "/textures/VeneerWhiteOakRandomMatched001-4K/VeneerWhiteOakRandomMatched001_ROUGHNESS_4K_METALNESS.png",
      "/textures/VeneerWhiteOakRandomMatched001-4K/VeneerWhiteOakRandomMatched001_METALNESS_4K_METALNESS.png",
    ].map((src) => imageKitLoader({ src }))
  ).map((texture) => {
    texture.flipY = false;
    return texture;
  });
  return (
    <group {...props} dispose={null}>
      <group position={[0, 0, -0.021]} rotation={[1.569, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube032_1.geometry}
          material={materials["Material.007"]}
        >
          <meshStandardMaterial
            map={colorMap}
            normalMap={normalMap}
            metalnessMap={metalnessMap}
            roughnessMap={roughnessMap}
          />
        </mesh>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube032_2.geometry}
          material={materials.quadro2_figura}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/painting-yellowred.glb");
