/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useLoader } from "@react-three/fiber";
import { imageKitLoader } from "@/app/utils/loader";

type GLTFResult = GLTF & {
  nodes: {
    Bookshelf001: THREE.Mesh;
  };
  materials: {
    Bookshelf_Wood067_2K: THREE.MeshStandardMaterial;
  };
};

export function DecorativeBookshelf(props: JSX.IntrinsicElements["group"]) {
  const { nodes } = useGLTF(
    "/models/decorative-bookshelf-opt.glb"
  ) as GLTFResult;

  const [colorMap, normalMap, roughnessMap, metalnessMap] = useTexture(
    [
      "/textures/VeneerWhiteOakRandomMatched001-4K/VeneerWhiteOakRandomMatched001_COL_4K_METALNESS.png",
      "/textures/VeneerWhiteOakRandomMatched001-4K/VeneerWhiteOakRandomMatched001_NRM_4K_METALNESS.png",
      "/textures/VeneerWhiteOakRandomMatched001-4K/VeneerWhiteOakRandomMatched001_ROUGHNESS_4K_METALNESS.png",
      "/textures/VeneerWhiteOakRandomMatched001-4K/VeneerWhiteOakRandomMatched001_METALNESS_4K_METALNESS.png",
    ].map((src) => imageKitLoader({ src }))
  ).map((texture) => {
    texture.flipY = false;
    return texture;
  });
  return (
    <group {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.Bookshelf001.geometry}>
        <meshStandardMaterial
          map={colorMap}
          normalMap={normalMap}
          metalnessMap={metalnessMap}
          roughnessMap={roughnessMap}
        />
      </mesh>
    </group>
  );
}
