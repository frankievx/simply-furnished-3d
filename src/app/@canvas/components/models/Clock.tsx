/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    MetalPart_01: THREE.Mesh;
    WoodenBody: THREE.Mesh;
  };
  materials: {
    WoodenClock: THREE.MeshStandardMaterial;
  };
};

export function Clock(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/models/clock-opt.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.MetalPart_01.geometry}
        material={materials.WoodenClock}
        position={[0, 0, 0.133]}
        scale={0.132}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.WoodenBody.geometry}
        material={materials.WoodenClock}
        position={[0, 0.001, 0.198]}
        scale={0.09}
      />
    </group>
  );
}

useGLTF.preload("/models/clock-opt.glb");
