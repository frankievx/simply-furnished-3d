/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Base: THREE.Mesh;
    ["Globe-Stand"]: THREE.Mesh;
    Sphere: THREE.Mesh;
  };
  materials: {
    ["Globe-Base-Wood"]: THREE.MeshStandardMaterial;
    ["Globe-Rough-Gold"]: THREE.MeshStandardMaterial;
    Globe: THREE.MeshStandardMaterial;
  };
};

export function GlobeDecor(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/models/globe-decor.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Base.geometry}
        material={materials["Globe-Base-Wood"]}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Globe-Stand"].geometry}
          material={materials["Globe-Rough-Gold"]}
          position={[0.002, -0.081, 0.094]}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Sphere.geometry}
            material={materials.Globe}
            rotation={[0, 0, 1.253]}
          />
        </mesh>
      </mesh>
    </group>
  );
}
