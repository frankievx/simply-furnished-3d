/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Blue: THREE.Mesh;
    Dark_Blue: THREE.Mesh;
    Morandi_Bottle_Vase001: THREE.Mesh;
    Pink: THREE.Mesh;
    Yellow: THREE.Mesh;
  };
  materials: {
    Blue: THREE.MeshStandardMaterial;
    ["Darl Blue"]: THREE.MeshStandardMaterial;
    ["White.001"]: THREE.MeshStandardMaterial;
    pink: THREE.MeshStandardMaterial;
    Yellow: THREE.MeshStandardMaterial;
  };
};

export function Vases(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/models/vases-opt.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Blue.geometry}
        material={materials.Blue}
        position={[-0.093, -0.008, 0.139]}
        scale={0.14}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Dark_Blue.geometry}
        material={materials["Darl Blue"]}
        position={[-0.05, -0.089, 0.039]}
        scale={0.046}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Morandi_Bottle_Vase001.geometry}
        material={materials["White.001"]}
        position={[0, 0, 0.089]}
        scale={0.09}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Pink.geometry}
        material={materials.pink}
        position={[0.153, -0.024, 0.11]}
        scale={0.11}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Yellow.geometry}
        material={materials.Yellow}
        position={[0.08, 0.016, 0.159]}
        scale={0.16}
      />
    </group>
  );
}

useGLTF.preload("/models/vases-opt.glb");
